Using Request Dispatcher Interface create a Servlet which will validate the
password entered by the user, if the user has entered "Servlet" as password, then
he will be forwarded to Welcome Servlet else the user will stay on the
index.html page and an error message will be displayed.


HTML Form (index.html):
html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Validation</title>
</head>
<body>
    <h2>Password Validation</h2>

    <%-- Display error message if validation fails --%>
    <%
        String errorMessage = (String)request.getAttribute("errorMessage");
        if (errorMessage != null) {
    %>
            <p style="color: red;"><%= errorMessage %></p>
    <%
        }
    %>

    <form action="PasswordValidationServlet" method="post">
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
Servlet (PasswordValidationServlet.java):
java
Copy code
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/PasswordValidationServlet")
public class PasswordValidationServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {

        // Retrieve password from the request parameters
        String password = request.getParameter("password");

        // Validate the password
        if ("Servlet".equals(password)) {
            // Password is correct, forward to Welcome Servlet
            RequestDispatcher dispatcher = request.getRequestDispatcher("WelcomeServlet");
            dispatcher.forward(request, response);
        } else {
            // Password is incorrect, display error message on index.html
            request.setAttribute("errorMessage", "Incorrect password. Please try again.");
            RequestDispatcher dispatcher = request.getRequestDispatcher("index.html");
            dispatcher.include(request, response);
        }
    }
}
Welcome Servlet (WelcomeServlet.java):
java
Copy code
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/WelcomeServlet")
public class WelcomeServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {

        // Display welcome message
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        out.println("<html><head><title>Welcome</title></head><body>");
        out.println("<h2>Welcome to the System!</h2>");
        out.println("</body></html>");
    }
}

Create a JSP page to demonstrate the use of Expression language. 

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Expression Language Demo</title>
</head>
<body>

    <%-- Declare a JavaBean for demonstration --%>
    <jsp:useBean id="person" class="com.example.Person" />

    <%-- Set properties of the JavaBean --%>
    <c:set target="${person}" property="firstName" value="John" />
    <c:set target="${person}" property="lastName" value="Doe" />
    <c:set target="${person}" property="age" value="25" />

    <h2>Expression Language Demo</h2>

    <%-- Accessing properties using EL --%>
    <p>First Name: ${person.firstName}</p>
    <p>Last Name: ${person.lastName}</p>
    <p>Age: ${person.age}</p>

    <%-- Using EL for expressions --%>
    <p>Full Name: ${person.firstName} ${person.lastName}</p>
    <p>Next Year's Age: ${person.age + 1}</p>

    <%-- Using EL for conditional rendering --%>
    <c:if test="${person.age ge 18}">
        <p>You are an adult.</p>
    </c:if>
    <c:if test="${person.age lt 18}">
        <p>You are a minor.</p>
    </c:if>

</body>
</html>
In this example:

We declare a JavaBean named Person with properties firstName, lastName, and age. This JavaBean is created in the background using the <jsp:useBean> tag.

We set values for the properties of the Person bean using the <c:set> tag from the JSTL (JavaServer Pages Standard Tag Library).

We use Expression Language (EL) to access and display the properties of the Person bean in the HTML content. EL expressions are enclosed within ${}.

We use EL for expressions, such as concatenating firstName and lastName to display the full name and adding 1 to age to show the next year's age.

We use EL for conditional rendering using the <c:if> tag from the JSTL.

Make sure to create a JavaBean class named Person in the package com.example with the required properties and appropriate getter and setter methods.

java
Copy code
package com.example;

public class Person {
    private String firstName;
    private String lastName;
    private int age;

    // Getters and setters

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}