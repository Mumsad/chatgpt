1. Create a Currency Converter application using EJB.
index.html code:-

<form action="Servlet" method="post">
    <label for="value" />Enter Value:
    <input id="value" name="value" type="number" />
    <label for="type" />Choose Type:
    <select id="type" name="type">
        <option value="">Select</option>
        <option value="r2d">Rupees to Dollar </option>
        <option value="d2r">Dollar to Rupees </option>
    </select>
    <button type="submit">Convert</button>
</form>


add Servlet with name Servlet

Servlet.java Code:-

import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybean.bean;

public class Servlet extends HttpServlet
{
    @EJB bean obj;
    public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException
    {
        res.setContentType("text/html");
        res.setCharacterEncoding("UTF-8");
        
        PrintWriter out = res.getWriter();
        
        double value = Double.parseDouble(req.getParameter("value"));
        String type = req.getParameter("type");
        
        if (type.equals("r2d"))
        {
            out.print("<h1>" + value + " rupeess is equals to " + obj.r2d(value) + " dollars."+ "</h1>");
        }
        else if (type.equals("d2r"))
        {
            out.print("<h1>" + value + " dollars is equals to " + obj.d2r(value) + " rupees" + "</h1>");
        }
        else
        {
            out.print("<h1>Invalid Request</h1>");
        }
    }
}

Add bean

click on webpage and right click and add session bean

and name is :- bean and add package name is mybean.

bean.java Code:- 


 
package mybean;

import javax.ejb.Stateless;

/**
 *
 * @author Shaikh 
 */
@Stateless
public class bean {

     public double r2d(double r)
    {
        return r/83.24;
    }
    public double d2r(double d)
    {
        return d*83.24;
    }
    // Add business logic below. (Right-click in editor and choose
    // "Insert Code > Add Business Method")
}


==============================================================
2. Write a JSP code to accept an employee id from user and delete the records of
that employee. If the employee id does not exist, it should redirect to page with
message “No such employee ID” else it should redirect to another page with the
message “Employee record deleted successfully”.

JSP Page (deleteEmployee.jsp):
jsp
Copy code
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Delete Employee Record</title>
</head>
<body>
    <h2>Delete Employee Record</h2>
    
    <form action="DeleteEmployeeServlet" method="post">
        Enter Employee ID: <input type="text" name="employeeId" required>
        <input type="submit" value="Delete">
    </form>

    <%-- Display messages returned by the servlet --%>
    <p style="color: red;"><%= request.getAttribute("errorMessage") %></p>
    <p style="color: green;"><%= request.getAttribute("successMessage") %></p>
</body>
</html>
Servlet (DeleteEmployeeServlet.java):
java
Copy code
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/DeleteEmployeeServlet")
public class DeleteEmployeeServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    // JDBC URL, username, and password of MySQL server
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/your_database";
    private static final String JDBC_USER = "your_username";
    private static final String JDBC_PASSWORD = "your_password";

    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        // Get employee ID from the form
        String employeeId = request.getParameter("employeeId");
        
        // Check if employee ID exists in the database
        if (isEmployeeExists(employeeId)) {
            // If employee exists, delete the record
            if (deleteEmployeeRecord(employeeId)) {
                // If record deleted successfully, set success message
                request.setAttribute("successMessage", "Employee record deleted successfully");
            } else {
                // If an error occurred while deleting, set error message
                request.setAttribute("errorMessage", "Error deleting employee record");
            }
        } else {
            // If employee ID does not exist, set error message
            request.setAttribute("errorMessage", "No such employee ID");
        }

        // Forward to the JSP page with the messages
        request.getRequestDispatcher("/deleteEmployee.jsp").forward(request, response);
    }

    // Check if an employee with the given ID exists in the database
    private boolean isEmployeeExists(String employeeId) {
        try (Connection connection = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {
            String query = "SELECT * FROM employees WHERE id = ?";
            try (PreparedStatement statement = connection.prepareStatement(query)) {
                statement.setString(1, employeeId);
                try (ResultSet resultSet = statement.executeQuery()) {
                    return resultSet.next(); // Return true if result set is not empty
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Delete employee record from the database
    private boolean deleteEmployeeRecord(String employeeId) {
        try (Connection connection = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {
            String query = "DELETE FROM employees WHERE id = ?";
            try (PreparedStatement statement = connection.prepareStatement(query)) {
                statement.setString(1, employeeId);
                int rowsAffected = statement.executeUpdate();
                return rowsAffected > 0; // Return true if at least one row is deleted
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
}
Database Configuration:
Make sure you have a MySQL database with a table named employees containing the necessary columns. Modify the JDBC URL, username, and password in the servlet according to your database configuration.

This example assumes a simple table named employees with columns such as id, name, email, etc. Adjust the database connection details and SQL queries based on your specific schema.

Remember to include the MySQL JDBC driver in your project's classpath. If you are using Maven, you can add the following dependency:

xml
Copy code
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.23</version> <!-- Use the latest version -->
</dependency>

